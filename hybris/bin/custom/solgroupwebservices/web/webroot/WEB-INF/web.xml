<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 [y] hybris Platform

 Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->

<web-app id="solgroupwebservices" version="3.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         metadata-complete="true">
    <absolute-ordering/>

    <display-name>solgroupwebservices</display-name>

	<!-- Authentication settings -->
	<!-- start -->
	<security-constraint>
      <web-resource-collection>
         <web-resource-name>customer creation</web-resource-name>
         <url-pattern>/services/*</url-pattern>
         <http-method>POST</http-method>
         <http-method>GET</http-method>
      </web-resource-collection>
      <auth-constraint>
         <role-name>wsoperator</role-name>
      </auth-constraint>
    </security-constraint>

    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>jaxrs</realm-name>
    </login-config>
    <security-role>
        <role-name>wsoperator</role-name>
    </security-role>
	<!-- end -->



    <filter>
        <filter-name>XSSFilter</filter-name>
        <filter-class>de.hybris.platform.servicelayer.web.XSSFilter</filter-class>
    </filter>

    <!-- Filter mappings -->
    <filter-mapping>
        <filter-name>XSSFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>solgroupwebservicesPlatformFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <!-- Spring Security Filter - uncomment it if you want to secure your application -->
<!--     <filter> -->
<!--         <filter-name>springSecurityFilter</filter-name> -->
<!--         <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> -->
<!--     </filter> -->


    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>solgroupwebservicesPlatformFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- Spring Security Filter mapping - uncomment it if you want to secure your application -->
<!--     <filter-mapping> -->
<!--         <filter-name>springSecurityFilter</filter-name> -->
<!--         <url-pattern>/*</url-pattern> -->
<!--     </filter-mapping> -->

    <!--
        Enabling a Spring web application context with 'session' and 'request' scope.
        - The 'contextConfigLocation' param specifies where your configuration files are located.
        - The HybrisContextLoaderListener extends the usual SpringContextLoaderListener (which loads
          the context from specified location) by adding the global application context of
          the platform as parent context.
        - The RequestContextListener is needed for exposing the 'request' scope to the context.
          Furthermore it is needed when overriding the 'jalosession' bean for your web application.
     -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>WEB-INF/solgroupewebservices-web-spring.xml</param-value>
    </context-param>

    <listener>
        <listener-class>de.hybris.platform.spring.HybrisContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

	<!-- CXF configuration -->
   <servlet>
       <servlet-name>CXFServlet</servlet-name>
       <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
       <load-on-startup>1</load-on-startup>
   </servlet>
   <servlet-mapping>
       <servlet-name>CXFServlet</servlet-name>
       <url-pattern>/services/*</url-pattern>
   </servlet-mapping>

    
	<session-config>
		<!-- Session timeout set to 5 minutes -->
		<session-timeout>5</session-timeout>
	</session-config>
    
</web-app> 
